"""empty message

Revision ID: 30fd042d27a8
Revises: 
Create Date: 2018-06-15 23:16:29.460241

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '30fd042d27a8'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('chemical',
    sa.Column('pubchem_id', sa.Integer(), nullable=False),
    sa.Column('common_name', sa.Text(), nullable=True),
    sa.Column('synonyms', sa.Text(), nullable=True),
    sa.Column('database', sa.Text(), nullable=True),
    sa.Column('iupac_name', sa.Text(), nullable=True),
    sa.Column('molecular_formula', sa.Text(), nullable=True),
    sa.Column('functional_group', sa.Text(), nullable=True),
    sa.Column('functional_group_idx', sa.Text(), nullable=True),
    sa.Column('smiles', sa.Text(), nullable=True),
    sa.Column('isomeric_smiles', sa.Text(), nullable=True),
    sa.Column('molecular_weight', sa.Float(), nullable=True),
    sa.Column('num_hydrogen_atoms', sa.Integer(), nullable=True),
    sa.Column('num_heavy_atoms', sa.Integer(), nullable=True),
    sa.Column('num_rings', sa.Integer(), nullable=True),
    sa.Column('num_rotatablebonds', sa.Integer(), nullable=True),
    sa.Column('number_of_aromatic_bonds', sa.Integer(), nullable=True),
    sa.Column('num_atoms', sa.Integer(), nullable=True),
    sa.Column('hba_count', sa.Integer(), nullable=True),
    sa.Column('hbd_count', sa.Integer(), nullable=True),
    sa.Column('hyrophilic_index', sa.Float(), nullable=True),
    sa.Column('alogp', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('pubchem_id')
    )
    op.create_index(op.f('ix_chemical_common_name'), 'chemical', ['common_name'], unique=False)
    op.create_index(op.f('ix_chemical_database'), 'chemical', ['database'], unique=False)
    op.create_index(op.f('ix_chemical_functional_group'), 'chemical', ['functional_group'], unique=False)
    op.create_index(op.f('ix_chemical_functional_group_idx'), 'chemical', ['functional_group_idx'], unique=False)
    op.create_index(op.f('ix_chemical_iupac_name'), 'chemical', ['iupac_name'], unique=False)
    op.create_index(op.f('ix_chemical_synonyms'), 'chemical', ['synonyms'], unique=False)
    op.create_table('disease',
    sa.Column('disease_id', sa.String(length=128), nullable=False),
    sa.Column('disease_name', sa.Text(), nullable=True),
    sa.Column('disease_synonyms', sa.Text(), nullable=True),
    sa.Column('disease_category', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('disease_id')
    )
    op.create_table('food',
    sa.Column('food_id', sa.String(length=128), nullable=False),
    sa.Column('display_name', sa.String(length=128), nullable=True),
    sa.Column('common_names', sa.Text(), nullable=True),
    sa.Column('scientific_name', sa.Text(), nullable=True),
    sa.Column('food_category', sa.String(length=128), nullable=True),
    sa.Column('tax_id', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('food_id')
    )
    op.create_table('gene',
    sa.Column('gene_id', sa.String(length=128), nullable=False),
    sa.PrimaryKeyConstraint('gene_id')
    )
    op.create_table('references',
    sa.Column('pmid', sa.Integer(), nullable=False),
    sa.Column('authors', sa.String(length=512), nullable=True),
    sa.Column('date', sa.String(length=128), nullable=True),
    sa.Column('journal_name', sa.String(length=512), nullable=True),
    sa.Column('journal_name_abbr', sa.String(length=512), nullable=True),
    sa.Column('publication_type', sa.String(length=512), nullable=True),
    sa.Column('title', sa.String(length=1024), nullable=True),
    sa.PrimaryKeyConstraint('pmid')
    )
    op.create_table('chemical_disease',
    sa.Column('pubchem_id', sa.String(length=128), nullable=False),
    sa.Column('disease_id', sa.String(length=128), nullable=False),
    sa.Column('type_relation', sa.String(length=512), nullable=True),
    sa.Column('via_genes', sa.String(length=512), nullable=True),
    sa.ForeignKeyConstraint(['disease_id'], ['disease.disease_id'], ),
    sa.ForeignKeyConstraint(['pubchem_id'], ['chemical.pubchem_id'], ),
    sa.PrimaryKeyConstraint('pubchem_id', 'disease_id')
    )
    op.create_table('chemical_gene',
    sa.Column('pubchem_id', sa.String(length=128), nullable=False),
    sa.Column('gene_id', sa.String(length=128), nullable=False),
    sa.Column('interaction_actions', sa.Text(), nullable=True),
    sa.Column('via_diseases', sa.String(length=512), nullable=True),
    sa.ForeignKeyConstraint(['gene_id'], ['gene.gene_id'], ),
    sa.ForeignKeyConstraint(['pubchem_id'], ['chemical.pubchem_id'], ),
    sa.PrimaryKeyConstraint('pubchem_id', 'gene_id')
    )
    op.create_table('disease_gene',
    sa.Column('gene_id', sa.String(length=128), nullable=False),
    sa.Column('disease_id', sa.String(length=128), nullable=False),
    sa.Column('reference', sa.String(length=100), nullable=True),
    sa.Column('via_chemicals', sa.String(length=512), nullable=True),
    sa.ForeignKeyConstraint(['disease_id'], ['disease.disease_id'], ),
    sa.ForeignKeyConstraint(['gene_id'], ['gene.gene_id'], ),
    sa.PrimaryKeyConstraint('gene_id', 'disease_id')
    )
    op.create_table('food_chemical',
    sa.Column('food_id', sa.String(length=128), nullable=False),
    sa.Column('pubchem_id', sa.String(length=128), nullable=False),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('references', sa.Text(), nullable=True),
    sa.Column('type_relation', sa.String(length=100), nullable=True),
    sa.Column('inference_network', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['food_id'], ['food.food_id'], ),
    sa.ForeignKeyConstraint(['pubchem_id'], ['chemical.pubchem_id'], ),
    sa.PrimaryKeyConstraint('food_id', 'pubchem_id')
    )
    op.create_table('food_disease',
    sa.Column('food_id', sa.String(length=128), nullable=False),
    sa.Column('disease_id', sa.String(length=128), nullable=False),
    sa.Column('positive_pmid', sa.String(length=512), nullable=True),
    sa.Column('negative_pmid', sa.String(length=512), nullable=True),
    sa.Column('pubchem_id', sa.String(length=512), nullable=True),
    sa.Column('weight', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['disease_id'], ['disease.disease_id'], ),
    sa.ForeignKeyConstraint(['food_id'], ['food.food_id'], ),
    sa.PrimaryKeyConstraint('food_id', 'disease_id')
    )
    op.create_index(op.f('ix_food_disease_weight'), 'food_disease', ['weight'], unique=False)
    op.create_table('food_gene',
    sa.Column('food_id', sa.String(length=128), nullable=False),
    sa.Column('gene_id', sa.String(length=128), nullable=False),
    sa.Column('via_diseases', sa.String(length=512), nullable=True),
    sa.Column('via_chemicals', sa.String(length=512), nullable=True),
    sa.ForeignKeyConstraint(['food_id'], ['food.food_id'], ),
    sa.ForeignKeyConstraint(['gene_id'], ['gene.gene_id'], ),
    sa.PrimaryKeyConstraint('food_id', 'gene_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('food_gene')
    op.drop_index(op.f('ix_food_disease_weight'), table_name='food_disease')
    op.drop_table('food_disease')
    op.drop_table('food_chemical')
    op.drop_table('disease_gene')
    op.drop_table('chemical_gene')
    op.drop_table('chemical_disease')
    op.drop_table('references')
    op.drop_table('gene')
    op.drop_table('food')
    op.drop_table('disease')
    op.drop_index(op.f('ix_chemical_synonyms'), table_name='chemical')
    op.drop_index(op.f('ix_chemical_iupac_name'), table_name='chemical')
    op.drop_index(op.f('ix_chemical_functional_group_idx'), table_name='chemical')
    op.drop_index(op.f('ix_chemical_functional_group'), table_name='chemical')
    op.drop_index(op.f('ix_chemical_database'), table_name='chemical')
    op.drop_index(op.f('ix_chemical_common_name'), table_name='chemical')
    op.drop_table('chemical')
    # ### end Alembic commands ###
